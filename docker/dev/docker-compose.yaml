---
version: "3.8"

name: training

services:
  db:
    container_name: training_db
    image: postgres:14
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data/
      - pgconf:/etc/postgresql
      - pglog:/var/log/postgresql
    networks:
      - internal_network
    restart: unless-stopped

  cache:
    container_name: training_cache
    depends_on:
      - db
    image: redis:7
    networks:
      - internal_network
    env_file:
      - .env

  web:
    container_name: training_web
    image: training:dev
    depends_on:
      - cache
    build:
      context: ../..
      dockerfile: ./docker/dev/Dockerfile
    env_file:
      - .env
    volumes:
      - ../..:/code/
    restart: unless-stopped
    networks:
      - internal_network
      - external_network
    ports:
      - "${APP_PORT:-8000}:8000"
    command:
      - sh
      - -c
      - |
        python manage.py migrate
        python manage.py collectstatic --no-input
        gunicorn -c python:config.gunicorn config.wsgi

  celery:
    container_name: training_celery
    image: training_celery:dev
    build:
      context: ../..
      dockerfile: ./docker/dev/Dockerfile
    env_file:
      - .env
    volumes:
      - ../..:/code/
    restart: unless-stopped
    networks:
      - internal_network
    depends_on:
      - web
    command:
      - sh
      - -c
      - |
        celery --app=config.celery:app worker -l INFO

networks:
  external_network:
  internal_network:
    driver: bridge

volumes:
  pgdata:
    driver: local
  pgconf:
    driver: local
  pglog:
    driver: local
